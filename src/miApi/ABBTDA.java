package miApi;

/**
 * Tipo de Dato Abstracto de un √?rbol Binario de B√∫squeda.
 */
public interface ABBTDA {
    /**
     * Inicializa el √°rbol
     */
    void inicializarABB();

    /**
     * @precond El √°rbol no puede estar vac√≠o
     * @return El valor del elemento
     */
    int raiz();

    /**
     * @precond El √°rbol no puede estar vac√≠o
     * @return La referencia del sub√°rbol izquierdo
     */
    ABBTDA hijoIzq();
    
    /**
     * @precond El √°rbol no puede estar vac√≠o
     * @return La referencia del sub√°rbol derecho
     */
    ABBTDA hijoDer();

    /**
     * Agregar un valor suministrado
     * @param valor El valor a agregar
     */
    void agregar(int valor);

    /**
     * Elimina un valor suministrado
     * @precond El valor debe existir
     * @param valor El valor a eliminar
     */
    void eliminar(int valor);

    /**
     * @precond La estructura debe estar inicializada
     * @return Si el √°rbol est√° vac√≠o
     */
    boolean arbolVacio();

    /**
     * @precond El √°rbol debe estar inicializado
     * @param valor El valor a buscar
     * @return Si el valor pertenece al √°rbol
     */
    boolean pertenece(int valor);
}
